import os
import json
import requests
import matplotlib.pyplot as plt

# –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –≥–∏—Ñ–∫–∞–º–∏
gif_dir = 'gif'

# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å –≥–∏—Ñ–∫–∞–º–∏ (–º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç—å —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏)
gifs = [
    "test.gif",
    "test2.gif",
    "test3.gif"
]

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –≥–∏—Ñ–∫–∞–º–∏
if not os.path.exists(gif_dir):
    print(f"–û—à–∏–±–∫–∞: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {gif_dir} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    exit(1)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≥–∏—Ñ–æ–∫
missing_gifs = [gif for gif in gifs if not os.path.isfile(os.path.join(gif_dir, gif))]
if missing_gifs:
    print(f"–û—à–∏–±–∫–∞: –°–ª–µ–¥—É—é—â–∏–µ –≥–∏—Ñ–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {gif_dir}: {missing_gifs}")
    exit(1)

# –ß—Ç–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–π –≥–∏—Ñ–∫–∏
index_file = 'last_gif_index.json'
if os.path.exists(index_file):
    with open(index_file, 'r') as file:
        data = json.load(file)
        last_index = data.get('index', -1)
else:
    last_index = -1

# –í—ã–±–æ—Ä —Å–ª–µ–¥—É—é—â–µ–π –≥–∏—Ñ–∫–∏ –ø–æ –∫—Ä—É–≥—É
next_gif_index = (last_index + 1) % len(gifs)
next_gif = gifs[next_gif_index]

# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ README.md —Å –Ω–æ–≤–æ–π –≥–∏—Ñ–∫–æ–π
readme_content = f"""
<a href="javascript:void(0)"> ![–ì–∏—Ñ–∫–∞](video_2024-06-08_23-36-04.gif) </a>
<div align="center">

I'm a 1st year student pursuing a Bachelor's degree in Software Engineering at the Polytechnic University üë®‚Äçüéì. I enjoy working with different technologies and exploring various fields, as well as learning new things üëæ. Currently, I'm developing simple programs and implementing various data structures, which helps me understand their inner workings and principles of operation üíª.

</div>

<div align="center">
    <h2><img src="./pedro.gif" alt="Pedro" width="28"> Technology Stack <img src="./pedro.gif" alt="Pedro" width="28"> </h2> 
    <img src="./maket1.png" alt="C++" width="100">
    <img src="./maket2.png" alt="Python" width="100">
    <img src="./maket3.png" alt="Git" width="100">
</div>

<a href="javascript:void(0)"> <br> ![–ì–∏—Ñ–∫–∞](gif/{next_gif}) </a>

<div align="center">
    <h2><img src="./redMan.gif" alt="Redman" width="32"> My GitHub Stats <img src="./redMan.gif" alt="Redman" width="32"></h2>

    

    # –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub
    username = 'GosteGrid'

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è—Ö
    repos_url = f'https://api.github.com/users/{username}/repos'
    repos_data = requests.get(repos_url).json()

    # –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–≤–µ–∑–¥
    stars = sum([repo['stargazers_count'] for repo in repos_data])

    # –î–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–º–º–∏—Ç–æ–≤, PR –∏ –ø—Ä–æ–±–ª–µ–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    commits = 0
    prs = 0
    issues = 0

    for repo in repos_data:
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–º–∏—Ç–∞—Ö
    commits_url = f"https://api.github.com/repos/{username}/{repo['name']}/commits"
    commits_data = requests.get(commits_url).json()
    commits += len(commits_data)
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ PR
    prs_url = f"https://api.github.com/repos/{username}/{repo['name']}/pulls?state=all"
    prs_data = requests.get(prs_url).json()
    prs += len(prs_data)
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö
    issues_url = f"https://api.github.com/repos/{username}/{repo['name']}/issues?state=all"
    issues_data = requests.get(issues_url).json()
    issues += len(issues_data)

    # –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
    labels = ['Stars', 'Commits', 'PRs', 'Issues']
    sizes = [stars, commits, prs, issues]

    fig, ax = plt.subplots()
    ax.pie(sizes, labels=labels, autopct='%1.1f%%')
    ax.axis('equal')  # –†–∞–≤–Ω—ã–µ –æ—Å–∏ –¥–ª—è –∫—Ä—É–≥–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞

    plt.savefig('maket1.png')
</div>

"""

# –ó–∞–ø–∏—Å—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –≤ README.md
try:
    with open('README.md', 'w') as file:
        file.write(readme_content)
    print("README.md updated successfully")
except IOError as e:
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ README.md: {e}")
    exit(1)

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–π –≥–∏—Ñ–∫–∏
try:
    with open(index_file, 'w') as file:
        json.dump({'index': next_gif_index}, file)
    print(f"–ò–Ω–¥–µ–∫—Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–π –≥–∏—Ñ–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω: {next_gif_index}")
except IOError as e:
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ {index_file}: {e}")
    exit(1)
